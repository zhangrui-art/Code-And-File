

1.初始化一个Git仓库，使用 git init 命令

2.添加文件到Git 仓库，分两步：
   使用命令 git add readme.txt ,可反复多次使用，添加多个文件(readme.txt替换成你使用的文件)；
   使用命令git commit -m "message",完成(这一步完成不了是因为没有添加user.name 和user.email 进文件夹找到隐藏的.git文件在config里面添加)
3.git status 查看修改的文件
  git diff readme.txt,查看这一次具体修改了哪些东西（readme.txt替换成你使用的文件);
4.git log 查看具体的修改哪些版本，用git log --pretty=oneline
 在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。
 回退到上一个版本 git reset --hard HEAD^
 往未来的版本追用 git reset --hard 1094(版本号，只用写前面几个就行 版本号不知道: git reflog)
 看具体文件里的内容： cat readme.txt
5.git工作
工作区：你创建的文件夹（初始化的库）--add->暂存区--commit->master
6.管理修改
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
7.本地库与远程库的连接
 git remote add origin git@github.com:zhangrui-art/learngit.git
 再把本地库的内容推送远程库
 git push -u origin master
 此后的文件修改后的提交都只要
 git push origin master
8.从远程库克隆
 从本地命令中输入：git clone git@github.com:zhangrui-art/gitclone.git  (可以把gitclone.git换成你自己的git文件)
9.创建分支
 创建并切换分支：git checkout -b dev(dev为自己命名的分支）
 git branch查看分支
 合并到master分支上：git merge dev
 删除空的分支：git branch -d dev
